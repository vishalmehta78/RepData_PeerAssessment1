sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace = TRUE)
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips == 1)
sum(flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
flips2 <- rbinom(c(0,1),100,size = 1,prob=(0,0.7))
flips2 <- rbinom(c(0,1),100,size = 1,prob = c(0,0.7))
flips2 <- rbinom(c(0,1),100,size = 1,prob = 0.7)
flips2 <- rbinom(c(0,1),size = 1,prob = 0.7)
flips2 <- rbinom(c(0,1),n = 100, size = 1,prob = 0.7)
flips2 <- rbinom(100,size = 1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean = 100, sd = 25)
?rpois
rpois(5, lambda = 10)
my_pois <- replicate(100,rpois(5,10))
mypois
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x =cars$speed, y= cars$dist)
plot(x =cars$dist,y=cars$speed)
plot(cars)
plot(x =cars$speed, y= cars$dist, xlab = "Speed")
plot(x =cars$speed, y= cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x =cars$speed, y= cars$dist, ylab = "Stopping Distance")
plot(x =cars$speed, y= cars$dist, xlab = "Speed", ylab = "Stopping Distance")
?plot
plot(x =cars$speed, y= cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot"
)
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col =2)
plot(cars, xlim =c(10,15))
plot(cars, pch =2)
datset(mtcars)
data(mtcars)
?boxplot
boxplot(mpg ~ cyl,mtcars)
hist(mtcars$mpg)
exit
kill
q()
swirl()
library(swirl)
swril()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
q()
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summar(pollution,pm25)
summary(pollution,pm25)
summary(pollution[pm25])
summary(pollution[,5])
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h =12)
hist(ppm,col = "green")
rug(ppm)
rug(low)
low
high
hist(ppm,col = "green",breaks = 100)
rug(ppm)
hist(ppm,col = "green")
abline(v =12,lwd = 2)
abline(v =media(ppm),col = "magenta",lwd = 4)
abline(v = median(ppm),col = "magenta",lwd = 4)
head(pollution)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col = "wheat", main = "Number of Counties in Each Region")
boxplat(pm25~region, data= pollution, col = "red")
boxplot(pm25~region, data= pollution, col = "red")
par(mfrow = c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head((east))
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution$pm25, region == "west"), col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
plot(latitude,pm25,)
with(pollution,plot(latitude, pm25))
abline(h =12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
ablin(h=12, lwd = 2, lty =2)
abline(h=12, lwd = 2, lty =2)
par(mfrow = c(1, 2),
| mar = c(5, 4, 2, 1))
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="east")
plot(east$latitude, east$pm25, main="East")
exit
quit()
swirl()
library(swirl)
swirl()
?Divce
?Divces
?Devices
plot(faithful)
with(faithful,plot(erruptions,waiting))
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
library(swirl)
swirl()
pdf(file = "myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cpy(png, file = "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
dim(cars)
head(cars)
with(cars,plot(speed,dist))
with(cars,plot(mean(speed),max(dist),"SWIRL rules!"))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = "state", c(4,1))
xyplot(Life.Exp ~ Income | region, data = "state", layout = c(4,1))\
xyplot(Life.Exp ~ Income | region, data = "state", layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = "state", layout(c(4,1))
)
xyplot(Life.Exp ~ Income | region, data = "state")
xyplot(Life.Exp ~ Income | region, data = "state",environment(c(4,1)))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
swirl()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone, na.ram =TRUE)
range(airquality$Ozone, na.rm =TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
with(scatterplot(Wind,Ozone))
with(plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
lenght(par())
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality$Month == 5)
may <- subset(airquality,Month == 5)
points(may$Wind, may$Ozone, col ="blue", pch = 17)
notmay <- subset(airquality,Month != 5)
points(may$Wind, may$Ozone, col ="red", pch = 8)
points(notmay$Wind, may$Ozone, col ="red", pch = 8)
points(notmay$Wind, notmay$Ozone, col ="red", pch = 8)
library(swirl)
swirl()
legend("topright", c(17,8), c("blue","red"), c("May","Other Months"))
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
abline(v = media(airquality$Wind),lty =2, lwd = 2)
abline(v = median(airquality$Wind),lty =2, lwd = 2)
par(mfrow = c(1,2))
with(airquality, plot(Wind,Ozone, main = "Ozone and Wind"))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
title(mtext = "Ozone and Weather in New York City",outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
swirl()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8,col = "Red" main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8, col = "Red", main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality,layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality,layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
library(swirl)
swirl()
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout= C(2,1))
xyplot(y~x|f, layout = C(2,1))
xyplot(y~x|f, c(2,1))
xyplot(y~x|f, layout= c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", TRUE)
pathtofile("plot1.R", local= TRUE)
pathtofile("plot1.R")
pathtofile("plot1.R",local=TRUE)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
library(swirl)
swirl()
pal(seq(0,1,len = 6))
library(swirl)
swirl()
p1<- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
p1("0xcc")
p1(0xcc)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun(rgb)
?rgb
p3<-colorRampPalette(("blue", "green"))
p3<-colorRampPalette(c("blue", "green"))
p3<-colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch =19,col=rgb(c(0,.5,.5)))
plot(x,y,pch =19,col=rgb(0,.5,.5))
plot(x,y,pch =19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg, color = drv)
qplot(displ,hwy,data = mpg, color = drv,geom = c("point","smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy,data = mpg,aesthetic = drv)
qplot(hwy,data = mpg,fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv ~., binwidth = 2)
qplot(displ,hwy,data=mpg, geom = c("point","smooth"), facets = .~drv)
ggplot(mpg,aes(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy))
g
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(set = "lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(col = "pink", size =4, alpha = .5)
g+geom_point(col = "pink", size =4, alpha = 1/2)
g+geom_point(color= "pink", size =4, alpha = 1/2)
g+geom_point(size =4, alpha = 1/2, color=drv)
g+geom_point(size =4, alpha = 1/2, aes(color=drv))
g+geom_point(size =4, alpha = 1/2, aes(color=drv))+labs(title = "Swirl Riles!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title = "Swirl Riles!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size = 4, linetype = 3, method = "lm",se = FALSE)
g + geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx,myy,type = "1",ylim = c(-3,3))
plot(myx,myy,type = "l",ylim = c(-3,3))
g<-ggplot(testdat,aes(myx,myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg,aes(x=displ, y=hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size =2, color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size =2, color="black")+labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(data = diamonds)
qplot(price,data = diamonds)
range(diamonds$price)
qplot(price,data = diamonds,binwiwdth = 18497/30)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut
)
qplot(price,data=diamonds,geom = "density")
qplot(price,data=diamonds,geom = "density",color = cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds, set = cut)
qplot(carat,price,data=diamonds, shape = cut)
qplot(carat,price,data=diamonds, color = cut)
qplot(carat,price,data=diamonds, color = cut,geom_smooth(method = "lm"))
qplot(carat,price,data=diamonds, color = cut,geom_smooth("lm"))
qplot(carat,price,data=diamonds, color = cut,geom_smooth(aes("lm"))
)
qplot(carat,price,data=diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat,price,data=diamonds, color = cut,facets = .~cut) + geom_smooth(method = "lm")
g <-ggplot(data = diamonds,aes(c("depth","price")))
g <-ggplot(data = diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha =1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smppth(method ="lm",size =3 ,color="pink")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method ="lm",size =3 ,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
install("swirl")
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col="blue")
abline(h = 0.4, col="red")
5
5
12
abline(h = 0.05, col="green")
dist(dFsm)
hc
heatmad
heatmap(dataMatrix,Colv = cm.colors(25))
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
exit
library("swirl")
rm(list= ls())
swril()
swirl()
cmat
points(cx,cy,col = c("red","orange", "purple"), pch = 3,cex =2,lwd =2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch =19,cex = 2,col = cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col = cols1, pch = 8, cex = 2, lwd =2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2,which.min)
points(x,y,pch =19,cex = 2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,3)
kmobj$iter
cluster
kmObj
kmObj$iter
plot(x,y,col=kmobj$cluster,pch = 19, last=2)
plot(x,y,col=kmobj$cluster,pch = 19, cex=2)
plot(x,y,col=kmObj$cluster,pch = 19, cex=2)
points(kmObj$centers,col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y,col=keam(dataFrame,6)$cluster,pch = 19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch = 19, cex=2)
points(kmObj$centers,col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch = 19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch = 19, cex=2)
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
q()
getwd()
rm(list=ls())
x<- 28
x
class(x)
y<-10
x-y
rm(x)
rm(y)
cls
clear
v1 <- c(1,2,3)
v2 <- c('a','b','c')
v1+v2
rm(v2)
v2 <- c(-1,-2,3)
v1+v2
class(v1+v2)
v3 <- c(1,2,3,4,6,7)
mean(v3)
v3[2:4]
v3[2:1]
rm(list=ls())
c1 <- c(1:20)
c1 >3
matrix(c1,byrow = TRUE, nrow=5,ncol = 2)
matrix(c1,byrow = TRUE, nrow=5,ncol = 3)
matrix(c1,byrow = TRUE, nrow=5,ncol = 2)
m1 <-matrix(c1,byrow = TRUE, nrow=5,ncol = 2)
m1 <-matrix(c1,byrow = TRUE, nrow=10,ncol = 2)
m1
m2 <-matrix(c1,byrow = FALSE, nrow=10,ncol = 2)
dim(m2)
m1
m3 <- cbind(m1,c(1:10))
m3
m3[1,2]
m3[1:3,2:4]
m3[1:3,2:3]
rm(list=ls())
getwd()
setwd("C:/Reproducible Research")
setwd("C:/Reporducible Research")
getwd()
unzip("repdata_data_activity.zip",exdir = "data")
rawData <- read.csv("data/activity.csv", stringsAsFactors = FALSE)
activity_data <- rawData[complete.cases(rawData),]
head(rawData)
dim(rawData)
summary(activity_data)
activity_data
install.packages(c("backports", "callr", "cli", "digest", "dplyr", "fields", "ggplot2", "gplots", "jsonlite", "lifecycle", "mime", "plyr", "prettyunits", "processx", "ps", "RCurl", "rlang", "rstudioapi", "stringi", "testthat", "vctrs", "yaml"))
library(lubridate)
rawData$date <- ymd(rawData$date)
str(activity)
str(rawData)
rm(list=ls())
unlink('Week2_Proj1_cache', recursive = TRUE)
unlink('Week2_Proj1_cache', recursive = TRUE)
unzip("repdata_data_activity.zip",exdir = "data")
rawData <- read.csv("data/activity.csv", stringsAsFactors = FALSE)
activity_data <- rawData[complete.cases(rawData),]
activity_data
View(activity_data)
install.packages("xlsx")
library(dplyr)
activity_data
%>% group_by(activity_data$date)
%>% mean(activity_data$steps)
activity_data %>% group_by(activity_data$date) %>% mean(activity_data$steps)
activity_data%>%group_by(activity_data$date)%>%mean(activity_data$steps)
activity_data%>%group_by(activity_data$date)%>%summarise(totsteps=sum(steps,na.rm=TRUE),na=mean(is.na(steps)))
stepsPerday<-activity_data%>%group_by(activity_data$date)%>%summarise(totsteps=sum(steps),mean=mean(is.na(steps)))
View(stepsPerday)
StepsPerDay<-activity_data%>%group_by(activity_data$date)%>%summarise(TotSteps=sum(steps))
mean_steps <- mean(StepsPerDay$TotSteps,na.rm=TRUE)
StepsPerDay<-activity_data%>%group_by(activity_data$date)%>%summarise(TotSteps=mean(steps))
View(StepsPerDay)
summary(stepsPerday)
